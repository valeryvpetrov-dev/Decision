package {{packageName}}.feature.{{snakeCase moduleName}}.presentation.mvi

import com.arkivanov.essenty.statekeeper.StateKeeper
import com.arkivanov.mvikotlin.core.store.Store
import com.arkivanov.mvikotlin.core.store.StoreFactory as MviStoreFactory

class {{entityName}}StoreFactory(
    private val storeName: String,
    private val storeFactory: MviStoreFactory,
    private val executor: {{entityName}}Executor,
    private val reducer: {{entityName}}Reducer,
) {

    fun create(
        stateKeeper: StateKeeper,
    ): Store<{{entityName}}Intent, {{entityName}}State, {{entityName}}Label> {
        val initialState = stateKeeper.consume(
            key = {{entityName}}State.STATE_KEEPER_KEY,
            strategy = {{entityName}}State.serializer()
        ) ?: {{entityName}}State.initial()
        return storeFactory.create(
            name = storeName,
            initialState = initialState,
            executorFactory = { executor },
            reducer = reducer,
        ).also {
            stateKeeper.register(
                key = {{entityName}}State.STATE_KEEPER_KEY,
                strategy = {{entityName}}State.serializer()
            ) {
                it.state
            }
        }
    }
}